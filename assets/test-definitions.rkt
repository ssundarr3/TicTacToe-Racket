#lang racket/base

(require rackunit "definitions.rkt")

;; Testing player-turn? game-over? win? evaluate register-move poss-brds

;; Defining test boards:
(define brd-1 (list 'p '() '() '(1 2 3 4 5 6 7 8 9)))
(define brd-2 (list 'p '(1 4 7) '(2 3) '(5 6 8 9)))
(define brd-3 (list 'p '(1 4 5 9) '(2 3 7 8) '(6 9)))
(define brd-4 (list 'p '(1 2 3) '(4 5 9) '(6 7 8)))
(define brd-5 (list 'p '(9 8 7) '(5 6 1) '(2 3 4)))
(define brd-6 (list 'p '(5 3 7) '(1 4 9) '(2 6 8)))
(define brd-7 (list 'p '(3 2 9 6) '(1 5 4) '(7 8)))
(define brd-8 (list 'p '(5 7 9 1) '(2 3 8) '(4 6)))
(define brd-9 (list 'p '(7 8 9) '(1 2 4) '(3 5 6)))
(define brd-10 (list 'p '(3 6 9) '(1 2 4) '(5 7 8)))
(define brd-11 (list 'p '(4 5 6) '(1 2 9) '(3 6 8)))
(define brd-12 (list 'p '(2 5 8) '(1 3 6) '(4 7 9)))
(define brd-13 (list 'p '(1 8 7 6) '(5 2 3 4 9) '()))
(define brd-14 (list 'p '(5 3 4 8 ) '(1 2 7 6 9) '()))
(define brd-15 (list 'p '(1 8 6 3) '(2 5 4 9 7) '()))
(define brd-16 (list 'c '() '() '(1 2 3 4 5 6 7 8 9)))
(define brd-17 (list 'c '(2 3) '(1 4 7) '(5 6 8 9)))
(define brd-18 (list 'c '(2 3 7 8) '(1 4 5 9) '(6 9)))
(define brd-19 (list 'c '(4 5 9) '(1 2 3) '(6 7 8)))
(define brd-20 (list 'c '(5 6 1) '(9 8 7) '(2 3 4)))
(define brd-21 (list 'c '(1 4 9) '(5 3 7) '(2 6 8)))
(define brd-22 (list 'c '(1 5 4) '(3 2 9 6) '(7 8)))
(define brd-23 (list 'c '(2 3 8) '(5 7 9 1) '(4 6)))
(define brd-24 (list 'c '(1 2 4) '(7 8 9) '(3 5 6)))
(define brd-25 (list 'c '(1 2 4) '(3 6 9) '(5 7 8)))
(define brd-26 (list 'c '(1 2 9) '(4 5 6) '(3 6 8)))
(define brd-27 (list 'c '(1 3 6) '(2 5 8) '(4 7 9)))
(define brd-28 (list 'c '(5 2 3 4 9) '(1 8 7 6) '()))
(define brd-29 (list 'c '(1 2 7 6 9) '(5 3 4 8) '()))
(define brd-30 (list 'c '(2 5 4 9 7) '(1 8 6 3) '()))

;; Extra test boards for register-move function:
(define brd-reg-1 (list 'c '() '(1) '(2 3 4 5 6 7 8 9)))
(define brd-reg-2 (list 'c '(1 4 7) '(2 3 6) '(5 8 9)))
(define brd-reg-3 (list 'c '(1 4 5 9) '(2 3 7 8 6) '(9)))
(define brd-reg-16 (list 'p '(4) '() '(1 2 3 5 6 7 8 9)))
(define brd-reg-17 (list 'p '(2 3 8) '(1 4 7) '(5 6 9)))
(define brd-reg-18 (list 'p '(2 3 7 8 9) '(1 4 5 9) '(6)))

;; Tests for register-move:
(check-equal? (register-move 1 brd-1) brd-reg-1)
(check-equal? (register-move 6 brd-2) brd-reg-2)
(check-equal? (register-move 6 brd-3) brd-reg-3)
(check-equal? (register-move 4 brd-16) brd-reg-16)
(check-equal? (register-move 8 brd-17) brd-reg-17)
(check-equal? (register-move 9 brd-18) brd-reg-18)

;; Extra boards for poss-brds function:
(define brd-pm-1 '((computer () (1) (2 3 4 5 6 7 8 9))
                   (computer () (2) (1 3 4 5 6 7 8 9))
                   (computer () (3) (1 2 4 5 6 7 8 9))
                   (computer () (4) (1 2 3 5 6 7 8 9))
                   (computer () (5) (1 2 3 4 6 7 8 9))
                   (computer () (6) (1 2 3 4 5 7 8 9))
                   (computer () (7) (1 2 3 4 5 6 8 9))
                   (computer () (8) (1 2 3 4 5 6 7 9))
                   (computer () (9) (1 2 3 4 5 6 7 8))))
(define brd-pm-3 '((computer (1 4 5 9) (2 3 7 8 6) (9))
                   (computer (1 4 5 9) (2 3 7 8 9) (6))))
(define brd-pm-13 '())
(define brd-pm-17 '((player (2 3 5) (1 4 7) (6 8 9))
                    (player (2 3 6) (1 4 7) (5 8 9))
                    (player (2 3 8) (1 4 7) (5 6 9))
                    (player (2 3 9) (1 4 7) (5 6 8))))
(define brd-pm-29 '())

;; Tests for poss-brds:
(check-equal? (poss-brds brd-1) brd-pm-1)
(check-equal? (poss-brds brd-3) brd-pm-3)
(check-equal? (poss-brds brd-13) brd-pm-13)
(check-equal? (poss-brds brd-17) brd-pm-17)
(check-equal? (poss-brds brd-29) brd-pm-29)

;; Tests for evaluate:
(check-equal? (evaluate brd-1) 0)
(check-equal? (evaluate brd-2) 10)
(check-equal? (evaluate brd-3) 10)
(check-equal? (evaluate brd-4) 10)
(check-equal? (evaluate brd-5) 10)
(check-equal? (evaluate brd-6) 10)
(check-equal? (evaluate brd-7) 10)
(check-equal? (evaluate brd-8) 10)
(check-equal? (evaluate brd-9) 10)
(check-equal? (evaluate brd-10) 10)
(check-equal? (evaluate brd-11) 10)
(check-equal? (evaluate brd-12) 10)
(check-equal? (evaluate brd-13) 0)
(check-equal? (evaluate brd-14) 0)
(check-equal? (evaluate brd-15) 0)
(check-equal? (evaluate brd-16) 0)
(check-equal? (evaluate brd-17) -10)
(check-equal? (evaluate brd-18) -10)
(check-equal? (evaluate brd-19) -10)
(check-equal? (evaluate brd-20) -10)
(check-equal? (evaluate brd-21) -10)
(check-equal? (evaluate brd-22) -10)
(check-equal? (evaluate brd-23) -10)
(check-equal? (evaluate brd-24) -10)
(check-equal? (evaluate brd-25) -10)
(check-equal? (evaluate brd-26) -10)
(check-equal? (evaluate brd-27) -10)
(check-equal? (evaluate brd-28) 0)
(check-equal? (evaluate brd-29) 0)
(check-equal? (evaluate brd-30) 0)

;; Tests for player-turn?:
(check-equal? (player-turn? (list-ref brd-1 0)) #t)
(check-equal? (player-turn? (list-ref brd-2 0)) #t)
(check-equal? (player-turn? (list-ref brd-3 0)) #t)
(check-equal? (player-turn? (list-ref brd-4 0)) #t)
(check-equal? (player-turn? (list-ref brd-5 0)) #t)
(check-equal? (player-turn? (list-ref brd-16 0)) #f)
(check-equal? (player-turn? (list-ref brd-17 0)) #f)
(check-equal? (player-turn? (list-ref brd-18 0)) #f)
(check-equal? (player-turn? (list-ref brd-19 0)) #f)
(check-equal? (player-turn? (list-ref brd-20 0)) #f)

;; Tests for game-over?:
(check-equal? (game-over? brd-1) #f)
(check-equal? (game-over? brd-2) #t)
(check-equal? (game-over? brd-3) #t)
(check-equal? (game-over? brd-4) #t)
(check-equal? (game-over? brd-5) #t)
(check-equal? (game-over? brd-6) #t)
(check-equal? (game-over? brd-7) #t)
(check-equal? (game-over? brd-8) #t)
(check-equal? (game-over? brd-9) #t)
(check-equal? (game-over? brd-10) #t)
(check-equal? (game-over? brd-11) #t)
(check-equal? (game-over? brd-12) #t)
(check-equal? (game-over? brd-13) #t)
(check-equal? (game-over? brd-14) #t)
(check-equal? (game-over? brd-15) #t)
(check-equal? (game-over? brd-16) #f)
(check-equal? (game-over? brd-17) #t)
(check-equal? (game-over? brd-18) #t)
(check-equal? (game-over? brd-19) #t)
(check-equal? (game-over? brd-20) #t)
(check-equal? (game-over? brd-21) #t)
(check-equal? (game-over? brd-22) #t)
(check-equal? (game-over? brd-23) #t)
(check-equal? (game-over? brd-24) #t)
(check-equal? (game-over? brd-25) #t)
(check-equal? (game-over? brd-26) #t)
(check-equal? (game-over? brd-27) #t)
(check-equal? (game-over? brd-28) #t)
(check-equal? (game-over? brd-29) #t)
(check-equal? (game-over? brd-30) #t)

;; Tests for win?:
(check-equal? (win? (list-ref brd-1 1)) #f)
(check-equal? (win? (list-ref brd-2 1)) #t)
(check-equal? (win? (list-ref brd-3 1)) #t)
(check-equal? (win? (list-ref brd-4 1)) #t)
(check-equal? (win? (list-ref brd-5 1)) #t)
(check-equal? (win? (list-ref brd-6 1)) #t)
(check-equal? (win? (list-ref brd-7 1)) #t)
(check-equal? (win? (list-ref brd-8 1)) #t)
(check-equal? (win? (list-ref brd-9 1)) #t)
(check-equal? (win? (list-ref brd-10 1)) #t)
(check-equal? (win? (list-ref brd-11 1)) #t)
(check-equal? (win? (list-ref brd-12 1)) #t)
(check-equal? (win? (list-ref brd-13 1)) #f)
(check-equal? (win? (list-ref brd-14 1)) #f)
(check-equal? (win? (list-ref brd-15 1)) #f)
(check-equal? (win? (list-ref brd-16 1)) #f)
(check-equal? (win? (list-ref brd-17 1)) #f)
(check-equal? (win? (list-ref brd-18 1)) #f)
(check-equal? (win? (list-ref brd-19 1)) #f)
(check-equal? (win? (list-ref brd-20 1)) #f)
(check-equal? (win? (list-ref brd-21 1)) #f)
(check-equal? (win? (list-ref brd-22 1)) #f)
(check-equal? (win? (list-ref brd-23 1)) #f)
(check-equal? (win? (list-ref brd-24 1)) #f)
(check-equal? (win? (list-ref brd-25 1)) #f)
(check-equal? (win? (list-ref brd-26 1)) #f)
(check-equal? (win? (list-ref brd-27 1)) #f)
(check-equal? (win? (list-ref brd-28 1)) #f)
(check-equal? (win? (list-ref brd-29 1)) #f)
(check-equal? (win? (list-ref brd-30 1)) #f)
(check-equal? (win? (list-ref brd-1 2)) #f)
(check-equal? (win? (list-ref brd-2 2)) #f)
(check-equal? (win? (list-ref brd-3 2)) #f)
(check-equal? (win? (list-ref brd-4 2)) #f)
(check-equal? (win? (list-ref brd-5 2)) #f)
(check-equal? (win? (list-ref brd-6 2)) #f)
(check-equal? (win? (list-ref brd-7 2)) #f)
(check-equal? (win? (list-ref brd-8 2)) #f)
(check-equal? (win? (list-ref brd-9 2)) #f)
(check-equal? (win? (list-ref brd-10 2)) #f)
(check-equal? (win? (list-ref brd-11 2)) #f)
(check-equal? (win? (list-ref brd-12 2)) #f)
(check-equal? (win? (list-ref brd-13 2)) #f)
(check-equal? (win? (list-ref brd-14 2)) #f)
(check-equal? (win? (list-ref brd-15 2)) #f)
(check-equal? (win? (list-ref brd-16 2)) #f)
(check-equal? (win? (list-ref brd-17 2)) #t)
(check-equal? (win? (list-ref brd-18 2)) #t)
(check-equal? (win? (list-ref brd-19 2)) #t)
(check-equal? (win? (list-ref brd-20 2)) #t)
(check-equal? (win? (list-ref brd-21 2)) #t)
(check-equal? (win? (list-ref brd-22 2)) #t)
(check-equal? (win? (list-ref brd-23 2)) #t)
(check-equal? (win? (list-ref brd-24 2)) #t)
(check-equal? (win? (list-ref brd-25 2)) #t)
(check-equal? (win? (list-ref brd-26 2)) #t)
(check-equal? (win? (list-ref brd-27 2)) #t)
(check-equal? (win? (list-ref brd-28 2)) #f)
(check-equal? (win? (list-ref brd-29 2)) #f)
(check-equal? (win? (list-ref brd-30 2)) #f)



